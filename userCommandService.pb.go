// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: userCommandService.proto

package nowin

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserCommandCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Password  string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UserCommandCreateRequest) Reset() {
	*x = UserCommandCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userCommandService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCommandCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCommandCreateRequest) ProtoMessage() {}

func (x *UserCommandCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userCommandService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCommandCreateRequest.ProtoReflect.Descriptor instead.
func (*UserCommandCreateRequest) Descriptor() ([]byte, []int) {
	return file_userCommandService_proto_rawDescGZIP(), []int{0}
}

func (x *UserCommandCreateRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserCommandCreateRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserCommandCreateRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserCommandCreateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserCommandCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserCommandCreateResponse) Reset() {
	*x = UserCommandCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userCommandService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCommandCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCommandCreateResponse) ProtoMessage() {}

func (x *UserCommandCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userCommandService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCommandCreateResponse.ProtoReflect.Descriptor instead.
func (*UserCommandCreateResponse) Descriptor() ([]byte, []int) {
	return file_userCommandService_proto_rawDescGZIP(), []int{1}
}

func (x *UserCommandCreateResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserCommandUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID  string `protobuf:"bytes,1,opt,name=userUUID,proto3" json:"userUUID,omitempty"`
	Email     string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FirstName string `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,4,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Password  string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UserCommandUpdateRequest) Reset() {
	*x = UserCommandUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userCommandService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCommandUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCommandUpdateRequest) ProtoMessage() {}

func (x *UserCommandUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userCommandService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCommandUpdateRequest.ProtoReflect.Descriptor instead.
func (*UserCommandUpdateRequest) Descriptor() ([]byte, []int) {
	return file_userCommandService_proto_rawDescGZIP(), []int{2}
}

func (x *UserCommandUpdateRequest) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

func (x *UserCommandUpdateRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserCommandUpdateRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserCommandUpdateRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserCommandUpdateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserCommandUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserCommandUpdateResponse) Reset() {
	*x = UserCommandUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userCommandService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCommandUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCommandUpdateResponse) ProtoMessage() {}

func (x *UserCommandUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userCommandService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCommandUpdateResponse.ProtoReflect.Descriptor instead.
func (*UserCommandUpdateResponse) Descriptor() ([]byte, []int) {
	return file_userCommandService_proto_rawDescGZIP(), []int{3}
}

type UserCommandDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUUID string `protobuf:"bytes,1,opt,name=userUUID,proto3" json:"userUUID,omitempty"`
}

func (x *UserCommandDeleteRequest) Reset() {
	*x = UserCommandDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userCommandService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCommandDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCommandDeleteRequest) ProtoMessage() {}

func (x *UserCommandDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userCommandService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCommandDeleteRequest.ProtoReflect.Descriptor instead.
func (*UserCommandDeleteRequest) Descriptor() ([]byte, []int) {
	return file_userCommandService_proto_rawDescGZIP(), []int{4}
}

func (x *UserCommandDeleteRequest) GetUserUUID() string {
	if x != nil {
		return x.UserUUID
	}
	return ""
}

type UserCommandDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserCommandDeleteResponse) Reset() {
	*x = UserCommandDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userCommandService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCommandDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCommandDeleteResponse) ProtoMessage() {}

func (x *UserCommandDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userCommandService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCommandDeleteResponse.ProtoReflect.Descriptor instead.
func (*UserCommandDeleteResponse) Descriptor() ([]byte, []int) {
	return file_userCommandService_proto_rawDescGZIP(), []int{5}
}

var File_userCommandService_proto protoreflect.FileDescriptor

var file_userCommandService_proto_rawDesc = []byte{
	0x0a, 0x18, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6e, 0x6f, 0x77, 0x69,
	0x6e, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x31, 0x0a, 0x19, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa2, 0x01,
	0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x36, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x55, 0x49, 0x44, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0x81, 0x02, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x6e, 0x6f, 0x77, 0x69, 0x6e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6e, 0x6f, 0x77, 0x69, 0x6e, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x6e, 0x6f, 0x77, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6e, 0x6f, 0x77, 0x69, 0x6e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x6e, 0x6f, 0x77, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6e, 0x6f, 0x77, 0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x66, 0x74, 0x69, 0x61, 0x2d, 0x69, 0x6e,
	0x63, 0x2f, 0x6e, 0x6f, 0x77, 0x69, 0x6e, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x3b, 0x6e, 0x6f, 0x77, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_userCommandService_proto_rawDescOnce sync.Once
	file_userCommandService_proto_rawDescData = file_userCommandService_proto_rawDesc
)

func file_userCommandService_proto_rawDescGZIP() []byte {
	file_userCommandService_proto_rawDescOnce.Do(func() {
		file_userCommandService_proto_rawDescData = protoimpl.X.CompressGZIP(file_userCommandService_proto_rawDescData)
	})
	return file_userCommandService_proto_rawDescData
}

var file_userCommandService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_userCommandService_proto_goTypes = []interface{}{
	(*UserCommandCreateRequest)(nil),  // 0: nowin.UserCommandCreateRequest
	(*UserCommandCreateResponse)(nil), // 1: nowin.UserCommandCreateResponse
	(*UserCommandUpdateRequest)(nil),  // 2: nowin.UserCommandUpdateRequest
	(*UserCommandUpdateResponse)(nil), // 3: nowin.UserCommandUpdateResponse
	(*UserCommandDeleteRequest)(nil),  // 4: nowin.UserCommandDeleteRequest
	(*UserCommandDeleteResponse)(nil), // 5: nowin.UserCommandDeleteResponse
}
var file_userCommandService_proto_depIdxs = []int32{
	0, // 0: nowin.UserCommandService.Create:input_type -> nowin.UserCommandCreateRequest
	2, // 1: nowin.UserCommandService.Update:input_type -> nowin.UserCommandUpdateRequest
	4, // 2: nowin.UserCommandService.Delete:input_type -> nowin.UserCommandDeleteRequest
	1, // 3: nowin.UserCommandService.Create:output_type -> nowin.UserCommandCreateResponse
	3, // 4: nowin.UserCommandService.Update:output_type -> nowin.UserCommandUpdateResponse
	5, // 5: nowin.UserCommandService.Delete:output_type -> nowin.UserCommandDeleteResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_userCommandService_proto_init() }
func file_userCommandService_proto_init() {
	if File_userCommandService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_userCommandService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCommandCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userCommandService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCommandCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userCommandService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCommandUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userCommandService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCommandUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userCommandService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCommandDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userCommandService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCommandDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_userCommandService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_userCommandService_proto_goTypes,
		DependencyIndexes: file_userCommandService_proto_depIdxs,
		MessageInfos:      file_userCommandService_proto_msgTypes,
	}.Build()
	File_userCommandService_proto = out.File
	file_userCommandService_proto_rawDesc = nil
	file_userCommandService_proto_goTypes = nil
	file_userCommandService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserCommandServiceClient is the client API for UserCommandService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserCommandServiceClient interface {
	Create(ctx context.Context, in *UserCommandCreateRequest, opts ...grpc.CallOption) (*UserCommandCreateResponse, error)
	Update(ctx context.Context, in *UserCommandUpdateRequest, opts ...grpc.CallOption) (*UserCommandUpdateResponse, error)
	Delete(ctx context.Context, in *UserCommandDeleteRequest, opts ...grpc.CallOption) (*UserCommandDeleteResponse, error)
}

type userCommandServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserCommandServiceClient(cc grpc.ClientConnInterface) UserCommandServiceClient {
	return &userCommandServiceClient{cc}
}

func (c *userCommandServiceClient) Create(ctx context.Context, in *UserCommandCreateRequest, opts ...grpc.CallOption) (*UserCommandCreateResponse, error) {
	out := new(UserCommandCreateResponse)
	err := c.cc.Invoke(ctx, "/nowin.UserCommandService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCommandServiceClient) Update(ctx context.Context, in *UserCommandUpdateRequest, opts ...grpc.CallOption) (*UserCommandUpdateResponse, error) {
	out := new(UserCommandUpdateResponse)
	err := c.cc.Invoke(ctx, "/nowin.UserCommandService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userCommandServiceClient) Delete(ctx context.Context, in *UserCommandDeleteRequest, opts ...grpc.CallOption) (*UserCommandDeleteResponse, error) {
	out := new(UserCommandDeleteResponse)
	err := c.cc.Invoke(ctx, "/nowin.UserCommandService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserCommandServiceServer is the server API for UserCommandService service.
type UserCommandServiceServer interface {
	Create(context.Context, *UserCommandCreateRequest) (*UserCommandCreateResponse, error)
	Update(context.Context, *UserCommandUpdateRequest) (*UserCommandUpdateResponse, error)
	Delete(context.Context, *UserCommandDeleteRequest) (*UserCommandDeleteResponse, error)
}

// UnimplementedUserCommandServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserCommandServiceServer struct {
}

func (*UnimplementedUserCommandServiceServer) Create(context.Context, *UserCommandCreateRequest) (*UserCommandCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserCommandServiceServer) Update(context.Context, *UserCommandUpdateRequest) (*UserCommandUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedUserCommandServiceServer) Delete(context.Context, *UserCommandDeleteRequest) (*UserCommandDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterUserCommandServiceServer(s *grpc.Server, srv UserCommandServiceServer) {
	s.RegisterService(&_UserCommandService_serviceDesc, srv)
}

func _UserCommandService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserCommandCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCommandServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nowin.UserCommandService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCommandServiceServer).Create(ctx, req.(*UserCommandCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserCommandService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserCommandUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCommandServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nowin.UserCommandService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCommandServiceServer).Update(ctx, req.(*UserCommandUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserCommandService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserCommandDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserCommandServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nowin.UserCommandService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserCommandServiceServer).Delete(ctx, req.(*UserCommandDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserCommandService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nowin.UserCommandService",
	HandlerType: (*UserCommandServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _UserCommandService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _UserCommandService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _UserCommandService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userCommandService.proto",
}
